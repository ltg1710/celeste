name: Release Native
on:
  push:
    tags: ["v*"]

env:
  RELEASE_NAME: bevy_shell

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: x86_64-unknown-linux-gnu.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: x86_64-apple-darwin.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: x86_64-pc-windows-msvc.zip
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Setup | Ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }} ${{ env.RELEASE_NAME }}.exe
          cd -
          7z a ${{ matrix.name }} assets/
          mv ${{ matrix.name }} ${{ env.RELEASE_NAME }}-${{ matrix.name }}

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          tar cvzf ${{ matrix.name }} assets/ static/ ${{ env.RELEASE_NAME }}
          mv ${{ matrix.name }} ${{ env.RELEASE_NAME }}-${{ matrix.name }}

      - name: Release | Upload
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.RELEASE_NAME }}-${{ matrix.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
